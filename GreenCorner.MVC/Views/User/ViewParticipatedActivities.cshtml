@model GreenCorner.MVC.ViewModels.VolunteerEventListViewModel

<section class="content-main">
    <div class="content-header">
        <h2 class="content-title mb-4">Hoạt động đã đăng ký</h2>
    </div>

    <div class="card mb-4">
        <header class="card-header">
            <div class="row gx-3">
                <div class="col-lg-4 col-md-6 me-auto">
                    <input type="text" id="searchInput" placeholder="Tìm kiếm sự kiện..." class="form-control" />
                </div>
                <div class="col-lg-2 col-md-3 col-6">
                    <select id="eventStatusFilter" class="form-select">
                       <option value="">Trạng thái sự kiện</option>
    <option value="open">Đang mở</option>
    <option value="close">Đã đóng</option>
    <option value="is going on">Đang diễn ra</option>
                    </select>
                    <select id="registerStatusFilter" class="form-select">
                        <option value="">Trạng thái đăng ký</option>
    <option value="approved">Đã duyệt</option>
    <option value="pending">Đang chờ duyệt</option>
    <option value="rejected">Đã bị từ chối</option>
    <option value="participated">Đã tham gia</option>
                    </select>
                </div
               
                    
                
            </div>
        </header>

        <div class="card-body">
            @if (!Model.Participations.Any())
            {
                <div class="alert alert-info text-center">
                    Bạn chưa tham gia hoạt động nào.
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-hover align-middle">
                        <thead class="table-light">
                            <tr>
                                <th>Tên sự kiện</th>
                                <th>Ngày bắt đầu</th>
                                <th>Ngày kết thúc</th>
                                <th>Trạng thái sự kiện</th>
                                <th>Đánh giá sự kiện</th>
                                <th>Loại đơn</th>
                                <th>Phân công</th>
                                <th>Vật dụng mang theo</th>
                                <th>Trạng thái đăng ký</th>
                                <th>Ngày đăng ký</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Participations)
                            {
                                <tr data-title="@item.Event.Title.ToLower()"
    data-eventstatus="@item.Event.Status.ToLower()"
    data-volunteerstatus="@item.Volunteer.Status.ToLower()">
                                    <td>@item.Event.Title</td>
                                    <td>@item.Event.StartDate?.ToString("dd/MM/yyyy")</td>
                                    <td>@item.Event.EndDate?.ToString("dd/MM/yyyy")</td>
                                    <td>
                                        @{
                                            var status = item.Event.Status;

                                            var eventBg = status switch
                                            {
                                                "Open" => "#28a745", // xanh lá
                                                "Close" => "#ffc107",  // vàng  // đỏ
                                                _ => "#6c757d"           // xám
                                            };

                                            var eventColor = status == "Pending" ? "#212529" : "#fff";

                                            var statusText = status switch
                                            {
                                                "Open" => "Đang mở",
                                                "Close" => "Đã đóng",
                                                "Is Going On" => "Đang diễn ra",
                                                        _ => "Không xác định"
                                            };
                                        
                                        <span class="badge rounded-pill" style="background-color:@(eventBg); color:@(eventColor);">
                                            @statusText
                                            </span>
                                            }
                                    </td>
                                    <td>
                                        @{
                                            if (@item.Event.Status == "Close")
                                            {
                                                <span class="badge rounded-pill" style="background-color:#28a745; color:@(eventColor);">
                                                    <a asp-controller="Event" asp-action="RateEvent" asp-route-eventId="@item.Event.CleanEventId">
                                                        Rate Event
                                                    </a>
                                                </span>
                                                <span class="badge rounded-pill" style="background-color:#28a745; color:@(eventColor);">
                                                    <a asp-controller="Event" asp-action="LeaderReview" asp-route-eventId="@item.Event.CleanEventId" asp-route-leaderId="@item.TeamLeaderId">
                                                        Review Leader
                                                    </a>
                                                </span>
                                            }else{
                                                <span class="badge rounded-pill" style="background-color:@(eventBg); color:@(eventColor);">
                                                   Chưa thể đánh giá
                                                </span>
                                            }
                                        }
                                            
                                    </td>
                                    <td>@item.Volunteer.ApplicationType</td>
                                    <td>@item.Volunteer.Assignment</td>
                                    <td>@item.Volunteer.CarryItems</td>
                                    <td>
                                        @{
                                            var statusVL = item.Volunteer.Status;

                                            var volunteerBg = statusVL switch
                                            {
                                                "Approved" => "#28a745",  // Xanh lá
                                                "Pending" => "#ffc107",   // Vàng
                                                "Rejected" => "#dc3545",  // Đỏ
                                                _ => "#6c757d"            // Xám
                                            };

                                            var volunteerColor = statusVL == "Pending" ? "#212529" : "#fff";

                                            var statusTextVL = statusVL switch
                                            {
                                                "Approved" => "Đã duyệt",
                                                "Pending" => "Đang chờ duyệt",
                                                "Rejected" => "Đã bị từ chối",
                                                "Participated" => "Đã tham gia",
                                                _ => "Không xác định"
                                            };
                                        }
                                        <span class="badge rounded-pill" style="background-color:@(volunteerBg); color:@(volunteerColor);">
                                            @statusTextVL
                                        </span>
                                    </td>
                                    <td>@item.Volunteer.CreatedAt?.ToString("dd/MM/yyyy")</td>
                                </tr>

                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>

    <div class="pagination-area mt-15 mb-50">
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-start">
                <li class="page-item active"><a class="page-link" href="#">01</a></li>
                <li class="page-item"><a class="page-link" href="#">02</a></li>
                <li class="page-item"><a class="page-link" href="#">03</a></li>
                <li class="page-item"><a class="page-link dot" href="#">...</a></li>
                <li class="page-item"><a class="page-link" href="#">10</a></li>
                <li class="page-item">
                    <a class="page-link" href="#"><i class="material-icons md-chevron_right"></i></a>
                </li>
            </ul>
        </nav>
    </div>
</section>
@section Scripts {
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const searchInput = document.getElementById("searchInput");
        const eventStatusFilter = document.getElementById("eventStatusFilter");
        const registerStatusFilter = document.getElementById("registerStatusFilter");
        const rows = document.querySelectorAll("table tbody tr");

        function filterTable() {
            const keyword = searchInput.value.toLowerCase();
            const selectedEventStatus = eventStatusFilter.value;
            const selectedRegisterStatus = registerStatusFilter.value;

            rows.forEach(row => {
                const title = row.getAttribute("data-title") || "";
                const eventStatus = row.getAttribute("data-eventstatus") || "";
                const volunteerStatus = row.getAttribute("data-volunteerstatus") || "";

                const matchTitle = title.includes(keyword);
                const matchEventStatus = !selectedEventStatus || eventStatus === selectedEventStatus;
                const matchRegisterStatus = !selectedRegisterStatus || volunteerStatus === selectedRegisterStatus;

                row.style.display = (matchTitle && matchEventStatus && matchRegisterStatus) ? "" : "none";
            });
        }

        searchInput.addEventListener("keyup", filterTable);
        eventStatusFilter.addEventListener("change", filterTable);
        registerStatusFilter.addEventListener("change", filterTable);
    });
</script>
}
